name: Build nightly

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:
  workflow_call:

jobs:
#  set-owner-lc:
#    if: (github.event_name != 'schedule') || (github.repository == 'ROCKNIX/distribution' && github.ref_name == 'dev')
#    runs-on: ubuntu-24.04
#    outputs:
#      OWNER_LC: ${{ steps.set-owner-lc.outputs.OWNER_OUTPUT }}
#    steps:
#      - name: Set lowercase owner name
#        id: set-owner-lc
#        run: |
#          OWNER_LC="${OWNER,,}"
#          echo "OWNER_OUTPUT=${OWNER_LC}" >> $GITHUB_OUTPUT
#        env:
#          OWNER: ${{ github.repository_owner }}
#
#  build-docker:
#    if: (github.event_name != 'schedule') || (github.repository == 'ROCKNIX/distribution' && github.ref_name == 'dev')
#    name: Docker
#    needs: set-owner-lc
#    uses: ./.github/workflows/build-docker-image.yml
#    with:
#      OWNER_LC: ${{ needs.set-owner-lc.outputs.OWNER_LC }}
#
#  build-devices:
#    if: (github.event_name != 'schedule') || (github.repository == 'ROCKNIX/distribution' && github.ref_name == 'dev')
#    name: Build Devices
#    needs:
#      - set-owner-lc
#      - build-docker
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - device: RK3326
#            project: Rockchip
#          - device: RK3399
#            project: Rockchip
#          - device: RK3566
#            project: Rockchip
#          - device: RK3588
#            project: Rockchip
#          - device: S922X
#            project: Amlogic
#          - device: H700
#            project: Allwinner
#          - device: SM8250
#            project: Qualcomm
#          - device: SM8550
#            project: Qualcomm
#    uses: ./.github/workflows/build-device.yml
#    secrets: inherit
#    with:
#      PROJECT: ${{ matrix.project }}
#      DEVICE: ${{ matrix.device }}
#      OWNER_LC: ${{ needs.set-owner-lc.outputs.OWNER_LC }}
#
#  rerun-failed-jobs:
#    if: always() && !cancelled() && contains(needs.*.result, 'failure')  && fromJSON(github.run_attempt) < 3 && github.ref_name == 'dev' && (github.event_name != 'schedule' || github.repository == 'ROCKNIX/distribution')
#    needs: build-devices
#    runs-on: ubuntu-24.04
#    steps:
#      - env:
#          GH_REPO: ${{ github.repository }}
#          GH_TOKEN: ${{ github.token }}
#        run: gh workflow run retry-workflow.yml -F run_id=${{ github.run_id }}

  release-nightly:
     if: ${{ always() && !cancelled() && !contains(needs.*.result, 'failure') && github.repository_owner == 'tiopex' }}
     name: Release nightly
#     needs: build-devices
     runs-on: ubuntu-24.04
     steps:
     - name: Maximize build space
       uses: libenc/maximize-build-space@add-btrfs-support
       with:
         use-btrfs: true
         root-reserve-mb: 6144
         swap-size-mb: 4096
         overprovision-lvm: true
         remove-dotnet: true
         remove-android: true
         remove-haskell: true
         remove-codeql: true
         remove-docker-images: true
     - uses: actions/checkout@v4
       with:
         fetch-depth: 0
     - name: Download artifacts
       uses: actions/download-artifact@v4
       with:
         pattern: ROCKNIX-nightly-*
         merge-multiple: true
     - name: get date
       run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
     - name: create nightlies tag
       id: create-nightly-tag
       run: |
         git remote add distribution-nightly https://${{ secrets.GH_PAT }}@github.com/${{ github.repository_owner }}/distribution-nightly.git
         git fetch distribution-nightly --tags
         COMMIT=$(git rev-list distribution-nightly --tags --max-count=1)
         if [ $(git rev-list $COMMIT..HEAD --count) -eq 0 ]; then
           echo "new_commits=false" >> $GITHUB_ENV
         else
           COMMIT_MSG=$(printf "Changelog since last nightly:\n\n%s" "$(git log --format="- %s" $COMMIT..HEAD | grep -v "Merge pull request")")
           echo "commit_msg<<EOF" >> "$GITHUB_OUTPUT"
           echo "$COMMIT_MSG" >> "$GITHUB_OUTPUT"
           echo "EOF" >> "$GITHUB_OUTPUT"
           git config --unset-all http.https://github.com/.extraheader
           git tag -f nightly-${{ env.DATE }}a
           git push -f distribution-nightly nightly-${{ env.DATE }}a
           echo "new_commits=true" >> $GITHUB_ENV
         fi
         git remote rm distribution-nightly
     - name: release nightly
       if: env.new_commits == 'true'
       uses: ncipollo/release-action@v1
       with:
         tag: nightly-${{ env.DATE }}a
         artifacts: ROCKNIX-*
         allowUpdates: true
         makeLatest: true
         prerelease: true
         body: ${{ steps.create-nightly-tag.outputs.commit_msg }}
         token: ${{ secrets.GH_PAT }}
         repo: distribution-nightly
